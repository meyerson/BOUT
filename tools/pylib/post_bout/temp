import post_bout as pb
meta

import post_bout as pb
from pb_present import LinResPresent
a = pb.corral(refresh=False,IConly=0,debug=False)
y = LinResPresent(a.db)
y.show()


import post_bout as pb
meta = pb.metadata(path='./')
pb.save(path='./',transform=True,debug=True)

import post_bout as pb
pb.save(path='./',transform=True,debug=True)

import post_bout as pb
pb.save(path='./',transform=True)


import post_bout as pb
pb.save(path='./',transform)

import post_bout as pb
meta = pb.metadata(path='./')
ni = pb.boutdata.collect('Ni')
z = pb.rotate(ni[0:10,:,:,:],meta,view=True)


#test the old spectral method on new data
ICmodes =[[1,1],[1,2],[1,3],[1,4],[1,5]]
import post_bout as pb
meta = pb.metadata(path='./')
ni = pb.boutdata.collect('Ni')
z = pb.rotate(ni,meta,view=False) #make this more flexibable
modes_db,ave = basic_info(z,meta,user_peak = ICmodes) 
	   
modes_db,ave = basic_info(data_r[active],meta,
                                      user_peak = ICmodes)
	

#for testing the original rotate routine
from boutdata import collect
from read_inp import metadata
path = '/tmp/2fluid/data_bz_11_1'
ni = collect('Ni',path=path)
meta = metadata(path=path)
from rotate import rotate
z = rotate(ni,meta,debug=True)


import post_bout
a = post_bout.corral(cached=True)
a.show2()

b = post_bout.LinRes(data=a)
b.modes()
dir(b)

import post_bout
from replab_lineplot import LineLegendExample 
from reportlab.platypus import *
a = LineLegendExample()
doc = SimpleDocTemplate('new.pdf')
doc.build([a])



a = post_bout.corral(cached=True)
a.show2()